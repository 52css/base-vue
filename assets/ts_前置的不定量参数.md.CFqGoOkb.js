import{_ as s,X as n,M as a,aw as l}from"./chunks/framework.BFDeQwB9.js";const u=JSON.parse('{"title":"前置的不定量参数","description":"","frontmatter":{},"headers":[],"relativePath":"ts/前置的不定量参数.md","filePath":"ts/前置的不定量参数.md"}'),p={name:"ts/前置的不定量参数.md"},o=l(`<h1 id="前置的不定量参数" tabindex="-1">前置的不定量参数 <a class="header-anchor" href="#前置的不定量参数" aria-label="Permalink to &quot;前置的不定量参数&quot;">​</a></h1><h2 id="code" tabindex="-1">Code <a class="header-anchor" href="#code" aria-label="Permalink to &quot;Code&quot;">​</a></h2><ul><li>如何类型标注？</li></ul><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">addImpl</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;boolean&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;string&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;number&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">b</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">c</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="解析" tabindex="-1">解析 <a class="header-anchor" href="#解析" aria-label="Permalink to &quot;解析&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 错误实现, 剩余必须在最后</span></span>
<span class="line"><span style="color:#F97583;">declare</span><span style="color:#F97583;"> function</span><span style="color:#B392F0;"> addImpl</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#FFAB70;">args</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">[], </span><span style="color:#B392F0;">fn</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#79B8FF;"> void</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 参数合并在一起</span></span>
<span class="line"><span style="color:#F97583;">declare</span><span style="color:#F97583;"> function</span><span style="color:#B392F0;"> addImpl</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#FFAB70;">args</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#F97583;">  ...</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[],</span></span>
<span class="line"><span style="color:#B392F0;">  Function</span></span>
<span class="line"><span style="color:#E1E4E8;">])</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 定义类型</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> JSTypes</span><span style="color:#F97583;"> =</span><span style="color:#9ECBFF;"> &#39;string&#39;</span><span style="color:#F97583;"> |</span><span style="color:#9ECBFF;"> &#39;number&#39;</span><span style="color:#F97583;"> |</span><span style="color:#9ECBFF;"> &#39;boolean&#39;</span><span style="color:#F97583;"> |</span><span style="color:#9ECBFF;"> &#39;symbol&#39;</span><span style="color:#F97583;"> |</span><span style="color:#9ECBFF;"> &#39;bigint&#39;</span><span style="color:#F97583;"> |</span><span style="color:#9ECBFF;"> &#39;undefined&#39;</span><span style="color:#F97583;"> |</span><span style="color:#9ECBFF;"> &#39;object&#39;</span><span style="color:#F97583;"> |</span><span style="color:#9ECBFF;"> &#39;function&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">declare</span><span style="color:#F97583;"> function</span><span style="color:#B392F0;"> addImpl</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#FFAB70;">args</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#F97583;">  ...</span><span style="color:#B392F0;">JSTypes</span><span style="color:#E1E4E8;">[],</span></span>
<span class="line"><span style="color:#B392F0;">  Function</span></span>
<span class="line"><span style="color:#E1E4E8;">])</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 2边有约束，修改成泛型</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> JSTypeMap</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#9ECBFF;">  &#39;string&#39;</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#9ECBFF;">  &#39;number&#39;</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> number</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#9ECBFF;">  &#39;boolean&#39;</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#9ECBFF;">  &#39;symbol&#39;</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> symbol</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#9ECBFF;">  &#39;bigint&#39;</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> bigint</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#9ECBFF;">  &#39;undefined&#39;</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> undefined</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#9ECBFF;">  &#39;object&#39;</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> object</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#9ECBFF;">  &#39;function&#39;</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Function</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> JSTypes</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> keyof</span><span style="color:#B392F0;"> JSTypeMap</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> ArgsType</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">T</span><span style="color:#F97583;"> extends</span><span style="color:#B392F0;"> JSTypes</span><span style="color:#E1E4E8;">[]&gt; </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span><span style="color:#B392F0;">I</span><span style="color:#F97583;"> in</span><span style="color:#F97583;"> keyof</span><span style="color:#B392F0;"> T</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> JSTypeMap</span><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">I</span><span style="color:#E1E4E8;">]]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">declare</span><span style="color:#F97583;"> function</span><span style="color:#B392F0;"> addImpl</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">T</span><span style="color:#F97583;"> extends</span><span style="color:#B392F0;"> JSTypes</span><span style="color:#E1E4E8;">[]&gt;(</span><span style="color:#F97583;">...</span><span style="color:#FFAB70;">args</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#F97583;">  ...</span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  (</span><span style="color:#F97583;">...</span><span style="color:#FFAB70;">args</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ArgsType</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#F97583;">=&gt;</span><span style="color:#79B8FF;"> any</span></span>
<span class="line"><span style="color:#E1E4E8;">])</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div>`,6),e=[o];function r(c,t,y,E,F,i){return a(),n("div",null,e)}const d=s(p,[["render",r]]);export{u as __pageData,d as default};
