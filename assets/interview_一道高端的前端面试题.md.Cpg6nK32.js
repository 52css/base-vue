import{_ as s,X as a,M as n,aw as l}from"./chunks/framework.BFDeQwB9.js";const y=JSON.parse('{"title":"一道高端的前端面试题","description":"","frontmatter":{},"headers":[],"relativePath":"interview/一道高端的前端面试题.md","filePath":"interview/一道高端的前端面试题.md"}'),e={name:"interview/一道高端的前端面试题.md"},p=l(`<h1 id="一道高端的前端面试题" tabindex="-1">一道高端的前端面试题 <a class="header-anchor" href="#一道高端的前端面试题" aria-label="Permalink to &quot;一道高端的前端面试题&quot;">​</a></h1><h2 id="code" tabindex="-1">Code <a class="header-anchor" href="#code" aria-label="Permalink to &quot;Code&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 下面代码输入的结果是什么</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> obj</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  a: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">obj[</span><span style="color:#9ECBFF;">&#39;1&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> 0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">obj[</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">obj.a] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> obj.a</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> values</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> Object.</span><span style="color:#B392F0;">values</span><span style="color:#E1E4E8;">(obj);</span></span>
<span class="line"><span style="color:#E1E4E8;">obj[values[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> obj.a;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(obj);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="解析" tabindex="-1">解析 <a class="header-anchor" href="#解析" aria-label="Permalink to &quot;解析&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">const obj = {</span></span>
<span class="line"><span style="color:#6A737D;">  a: 0,</span></span>
<span class="line"><span style="color:#6A737D;">}</span></span>
<span class="line"><span style="color:#6A737D;">obj[&#39;1&#39;] = 0; // obj = {a: 0, 1: 0}</span></span>
<span class="line"><span style="color:#6A737D;">obj[++obj.a] = obj.a++; // obj[1] = 1, obj[a] = 2 =&gt; {a: 2, 1: 1}</span></span>
<span class="line"><span style="color:#6A737D;">const values = Object.values(obj); // [1, 2]</span></span>
<span class="line"><span style="color:#6A737D;">obj[values[1]] = obj.a; // obj[2] = 2;</span></span>
<span class="line"><span style="color:#6A737D;">console.log(obj); // {a: 2, 1: 1, 2: 2}</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,5),o=[p];function r(c,t,i,b,E,d){return n(),a("div",null,o)}const m=s(e,[["render",r]]);export{y as __pageData,m as default};
