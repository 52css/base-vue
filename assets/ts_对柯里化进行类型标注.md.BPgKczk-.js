import{_ as s,X as n,M as a,aw as l}from"./chunks/framework.BFDeQwB9.js";const u=JSON.parse('{"title":"对柯里化进行类型标注","description":"","frontmatter":{},"headers":[],"relativePath":"ts/对柯里化进行类型标注.md","filePath":"ts/对柯里化进行类型标注.md"}'),p={name:"ts/对柯里化进行类型标注.md"},o=l(`<h1 id="对柯里化进行类型标注" tabindex="-1">对柯里化进行类型标注 <a class="header-anchor" href="#对柯里化进行类型标注" aria-label="Permalink to &quot;对柯里化进行类型标注&quot;">​</a></h1><h2 id="code" tabindex="-1">Code <a class="header-anchor" href="#code" aria-label="Permalink to &quot;Code&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">declare</span><span style="color:#F97583;"> function</span><span style="color:#B392F0;"> curry</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> sum</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">a</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> number</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">b</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> number</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">c</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> number</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#79B8FF;"> 123</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> curried</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> curry</span><span style="color:#E1E4E8;">(sum);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> r</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> curried</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">)(</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="解析" tabindex="-1">解析 <a class="header-anchor" href="#解析" aria-label="Permalink to &quot;解析&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 增加泛型</span></span>
<span class="line"><span style="color:#F97583;">declare</span><span style="color:#F97583;"> function</span><span style="color:#B392F0;"> curry</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">A</span><span style="color:#F97583;"> extends</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">[], </span><span style="color:#B392F0;">R</span><span style="color:#E1E4E8;">&gt;(</span><span style="color:#B392F0;">fn</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">...</span><span style="color:#FFAB70;">args</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> A</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> R</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Function</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 分析情况</span></span>
<span class="line"><span style="color:#6A737D;"> * 1. () =&gt; R</span></span>
<span class="line"><span style="color:#6A737D;"> * 2. (A) =&gt; R</span></span>
<span class="line"><span style="color:#6A737D;"> * 3. (第一个参数类型) =&gt; 新的函数</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> Curried</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">A</span><span style="color:#F97583;"> extends</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">[], </span><span style="color:#B392F0;">R</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> A</span><span style="color:#F97583;"> extends</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"><span style="color:#F97583;">  ?</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> R</span></span>
<span class="line"><span style="color:#F97583;">  :</span><span style="color:#B392F0;"> A</span><span style="color:#F97583;"> extends</span><span style="color:#E1E4E8;"> [</span><span style="color:#F97583;">infer</span><span style="color:#B392F0;"> P</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#F97583;">  ?</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">x</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> P</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> R</span></span>
<span class="line"><span style="color:#F97583;">  :</span><span style="color:#B392F0;"> A</span><span style="color:#F97583;"> extends</span><span style="color:#E1E4E8;"> [</span><span style="color:#F97583;">infer</span><span style="color:#B392F0;"> P</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">...infer</span><span style="color:#B392F0;"> Rest</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#F97583;">  ?</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">x</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> P</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> Curried</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">Rest</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">R</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">  :</span><span style="color:#79B8FF;"> never</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">declare</span><span style="color:#F97583;"> function</span><span style="color:#B392F0;"> curry</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">A</span><span style="color:#F97583;"> extends</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">[], </span><span style="color:#B392F0;">R</span><span style="color:#E1E4E8;">&gt;(</span></span>
<span class="line"><span style="color:#B392F0;">  fn</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">...</span><span style="color:#FFAB70;">args</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> A</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> R</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Curried</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">A</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">R</span><span style="color:#E1E4E8;">&gt;;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,5),e=[o];function r(c,t,y,E,F,i){return a(),n("div",null,e)}const d=s(p,[["render",r]]);export{u as __pageData,d as default};
