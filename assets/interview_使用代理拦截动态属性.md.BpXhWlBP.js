import{_ as s,X as n,M as a,aw as l}from"./chunks/framework.BFDeQwB9.js";const b=JSON.parse('{"title":"使用代理拦截动态属性","description":"","frontmatter":{},"headers":[],"relativePath":"interview/使用代理拦截动态属性.md","filePath":"interview/使用代理拦截动态属性.md"}'),p={name:"interview/使用代理拦截动态属性.md"},e=l(`<h1 id="使用代理拦截动态属性" tabindex="-1">使用代理拦截动态属性 <a class="header-anchor" href="#使用代理拦截动态属性" aria-label="Permalink to &quot;使用代理拦截动态属性&quot;">​</a></h1><h2 id="code" tabindex="-1">Code <a class="header-anchor" href="#code" aria-label="Permalink to &quot;Code&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> r1</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> add[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">][</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">][</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">+</span><span style="color:#79B8FF;"> 4</span><span style="color:#6A737D;"> // 期望结果 10</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> r2</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> add[</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">][</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">+</span><span style="color:#79B8FF;"> 30</span><span style="color:#6A737D;"> // 期望结果 60</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> r3</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> add[</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">][</span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">][</span><span style="color:#79B8FF;">300</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">+</span><span style="color:#79B8FF;"> 400</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 期望结果 1000</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(r1);</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(r2);</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(r3);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="解析" tabindex="-1">解析 <a class="header-anchor" href="#解析" aria-label="Permalink to &quot;解析&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> createProxy</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">value</span><span style="color:#F97583;"> =</span><span style="color:#79B8FF;"> 0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#B392F0;"> toPrimitive</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> value</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Proxy</span><span style="color:#E1E4E8;">({}, {</span></span>
<span class="line"><span style="color:#B392F0;">    get</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">target</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (key </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> Symbol.toPrimitive) {</span></span>
<span class="line"><span style="color:#F97583;">        return</span><span style="color:#E1E4E8;"> toPrimitive</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#F97583;">      return</span><span style="color:#B392F0;"> createProxy</span><span style="color:#E1E4E8;">(value </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> Number</span><span style="color:#E1E4E8;">(key));</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> add</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> createProxy</span><span style="color:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,5),o=[e];function r(c,t,E,i,y,F){return a(),n("div",null,o)}const u=s(p,[["render",r]]);export{b as __pageData,u as default};
