import{_ as s,X as n,M as a,aw as l}from"./chunks/framework.BFDeQwB9.js";const u=JSON.parse('{"title":"手写 call","description":"","frontmatter":{},"headers":[],"relativePath":"interview/手写call.md","filePath":"interview/手写call.md"}'),p={name:"interview/手写call.md"},e=l(`<h1 id="手写-call" tabindex="-1">手写 call <a class="header-anchor" href="#手写-call" aria-label="Permalink to &quot;手写 call&quot;">​</a></h1><h2 id="解析" tabindex="-1">解析 <a class="header-anchor" href="#解析" aria-label="Permalink to &quot;解析&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">Function</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">myCall</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">ctx</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">...</span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#6A737D;">  // 获取this指向</span></span>
<span class="line"><span style="color:#E1E4E8;">  ctx </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ctx </span><span style="color:#F97583;">===</span><span style="color:#79B8FF;"> undefined</span><span style="color:#F97583;"> ||</span><span style="color:#E1E4E8;"> ctx </span><span style="color:#F97583;">===</span><span style="color:#79B8FF;"> null</span><span style="color:#F97583;"> ?</span><span style="color:#E1E4E8;"> globalThis </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Object</span><span style="color:#E1E4E8;">(ctx);</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> fn</span><span style="color:#F97583;"> =</span><span style="color:#79B8FF;"> this</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> key</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> Symbol</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  Object.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(ctx, key, {</span></span>
<span class="line"><span style="color:#E1E4E8;">    value: fn,</span></span>
<span class="line"><span style="color:#E1E4E8;">    enumerable: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> rtv</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> ctx[key](</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">args);</span></span>
<span class="line"><span style="color:#F97583;">  delete</span><span style="color:#E1E4E8;"> ctx[key];</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#E1E4E8;"> rtv;</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,3),o=[e];function c(r,t,i,E,y,F){return a(),n("div",null,o)}const d=s(p,[["render",c]]);export{u as __pageData,d as default};
