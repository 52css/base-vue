import{_ as s,X as n,M as a,aw as l}from"./chunks/framework.BFDeQwB9.js";const F=JSON.parse('{"title":"CommonJS的本质","description":"","frontmatter":{},"headers":[],"relativePath":"interview/CommonJS的本质.md","filePath":"interview/CommonJS的本质.md"}'),p={name:"interview/CommonJS的本质.md"},e=l(`<h1 id="commonjs的本质" tabindex="-1">CommonJS的本质 <a class="header-anchor" href="#commonjs的本质" aria-label="Permalink to &quot;CommonJS的本质&quot;">​</a></h1><h2 id="code" tabindex="-1">Code <a class="header-anchor" href="#code" aria-label="Permalink to &quot;Code&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.a </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> 1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">.b </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> 2</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#79B8FF;">exports</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  c: </span><span style="color:#79B8FF;">3</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  d: </span><span style="color:#79B8FF;">4</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">.e </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> 5</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.f </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> 6</span><span style="color:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="解析" tabindex="-1">解析 <a class="header-anchor" href="#解析" aria-label="Permalink to &quot;解析&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">modulePath</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#6A737D;">  // 1. 根据传递的模块路径，得到模块完整的绝对路径</span></span>
<span class="line"><span style="color:#F97583;">  var</span><span style="color:#E1E4E8;"> moduleId </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> getModuleId</span><span style="color:#E1E4E8;">(modulePath);</span></span>
<span class="line"><span style="color:#6A737D;">  // 2. 判断缓存</span></span>
<span class="line"><span style="color:#F97583;">  if</span><span style="color:#E1E4E8;"> (cache[moduleId]) {</span></span>
<span class="line"><span style="color:#F97583;">    return</span><span style="color:#E1E4E8;"> cache[moduleId];</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#6A737D;">  // 3. 真正运行模块代码的辅助函数</span></span>
<span class="line"><span style="color:#F97583;">  function</span><span style="color:#B392F0;"> _require</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">require</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__filename</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__dirname</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#6A737D;">    // 目标模块的代码在这里</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#6A737D;">  // 4. 准备并运行辅助函数</span></span>
<span class="line"><span style="color:#F97583;">  var</span><span style="color:#E1E4E8;"> module </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    exports: {},</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#F97583;">  var</span><span style="color:#E1E4E8;"> exports </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">  // 得到模块文件的绝对路径</span></span>
<span class="line"><span style="color:#F97583;">  var</span><span style="color:#E1E4E8;"> __filename </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> moduleId;</span></span>
<span class="line"><span style="color:#6A737D;">  // 得到模块所在目录的绝对路径</span></span>
<span class="line"><span style="color:#F97583;">  var</span><span style="color:#E1E4E8;"> __dirname </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> getDirname</span><span style="color:#E1E4E8;">(__filename);</span></span>
<span class="line"><span style="color:#E1E4E8;">  _require.</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, require, </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">, __filename, __dirname);</span></span>
<span class="line"><span style="color:#6A737D;">  // 5. 缓存 module.exports;</span></span>
<span class="line"><span style="color:#E1E4E8;">  cache[moduleId] </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">  // 6. 返回 module.exports;</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#79B8FF;"> module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="分析" tabindex="-1">分析 <a class="header-anchor" href="#分析" aria-label="Permalink to &quot;分析&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.a </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> 1</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// this = exports = module.exports = { a: 1 }</span></span>
<span class="line"><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">.b </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> 2</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// this = exports = module.exports = { a: 1, b: 2 }</span></span>
<span class="line"><span style="color:#79B8FF;">exports</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> { </span><span style="color:#6A737D;">// exports = { c: 3 } this = module.exports = {a: 1, b: 2}</span></span>
<span class="line"><span style="color:#E1E4E8;">  c: </span><span style="color:#79B8FF;">3</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> { </span><span style="color:#6A737D;">// exports = { c: 3 } module.exports = {d: 4} this = {a: 1, b: 2}</span></span>
<span class="line"><span style="color:#E1E4E8;">  d: </span><span style="color:#79B8FF;">4</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">.e </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> 5</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// exports = {c: 3, e: 5} module.exports = {d: 4} this = {a: 1, b: 2}</span></span>
<span class="line"><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.f </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> 6</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">//  exports = {c: 3, e: 5} module.exports = {d: 4} this = {a: 1, b: 2, f: 6}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,7),o=[e];function r(c,t,E,i,y,b){return a(),n("div",null,o)}const u=s(p,[["render",r]]);export{F as __pageData,u as default};
