import{_ as s,X as a,M as n,aw as l}from"./chunks/framework.BFDeQwB9.js";const b=JSON.parse('{"title":"从字段到函数的推导","description":"","frontmatter":{},"headers":[],"relativePath":"ts/从字段到函数的推导.md","filePath":"ts/从字段到函数的推导.md"}'),p={name:"ts/从字段到函数的推导.md"},e=l(`<h1 id="从字段到函数的推导" tabindex="-1">从字段到函数的推导 <a class="header-anchor" href="#从字段到函数的推导" aria-label="Permalink to &quot;从字段到函数的推导&quot;">​</a></h1><h2 id="code" tabindex="-1">Code <a class="header-anchor" href="#code" aria-label="Permalink to &quot;Code&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> personWatcher</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> watch</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  firstName: </span><span style="color:#9ECBFF;">&#39;Saoirse&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  lastName: </span><span style="color:#9ECBFF;">&#39;Ronan&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  age: </span><span style="color:#79B8FF;">26</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  sex: </span><span style="color:#9ECBFF;">&#39;男&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#E1E4E8;">personWatch.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;firstNameChanged&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">oldValue</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">newValue</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="解析" tabindex="-1">解析 <a class="header-anchor" href="#解析" aria-label="Permalink to &quot;解析&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> Watcher</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  on</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">K</span><span style="color:#F97583;"> extends</span><span style="color:#F97583;"> keyof</span><span style="color:#B392F0;"> T</span><span style="color:#F97583;"> &amp;</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">&gt;(</span></span>
<span class="line"><span style="color:#FFAB70;">    eventName</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;"> \`\${</span><span style="color:#B392F0;">K</span><span style="color:#9ECBFF;">}Changed\`</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    callback</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">oldValue</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> T</span><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">K</span><span style="color:#E1E4E8;">], </span><span style="color:#FFAB70;">newValue</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> T</span><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">K</span><span style="color:#E1E4E8;">]) </span><span style="color:#F97583;">=&gt;</span><span style="color:#79B8FF;"> void</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> void</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#F97583;">declare</span><span style="color:#F97583;"> function</span><span style="color:#B392F0;"> watch</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;">&gt;(</span><span style="color:#FFAB70;">obj</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> T</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Watcher</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;">&gt;;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,5),o=[e];function t(r,c,E,y,i,F){return n(),a("div",null,o)}const u=s(p,[["render",t]]);export{b as __pageData,u as default};
