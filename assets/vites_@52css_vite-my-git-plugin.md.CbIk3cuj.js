import{_ as s,X as a,M as n,aw as e}from"./chunks/framework.BFDeQwB9.js";const m=JSON.parse('{"title":"vite-my-git-plugin","description":"","frontmatter":{},"headers":[],"relativePath":"vites/@52css/vite-my-git-plugin.md","filePath":"vites/@52css/vite-my-git-plugin.md"}'),l={name:"vites/@52css/vite-my-git-plugin.md"},p=e(`<h1 id="vite-my-git-plugin" tabindex="-1">vite-my-git-plugin <a class="header-anchor" href="#vite-my-git-plugin" aria-label="Permalink to &quot;vite-my-git-plugin&quot;">​</a></h1><h2 id="使用场景" tabindex="-1">使用场景 <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景&quot;">​</a></h2><ul><li>线上问题如何定位，如果访问一个地址或者一个 console 可以查看到最近构建信息是否解决我们问题</li></ul><h2 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h2><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#9ECBFF;"> add</span><span style="color:#9ECBFF;"> @52css/vite-my-git-plugin</span><span style="color:#79B8FF;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="插件配置" tabindex="-1">插件配置 <a class="header-anchor" href="#插件配置" aria-label="Permalink to &quot;插件配置&quot;">​</a></h2><p>1 在 vite.config.ts 中进行插件配置，如下：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 引入rollup-plugin-visualizer模块</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { MyGitPlugin } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;@52css/vite-my-git-plugin&#39;</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#F97583;"> default</span><span style="color:#B392F0;"> defineConfig</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">  plugins:[</span></span>
<span class="line"><span style="color:#F97583;">    ...</span></span>
<span class="line"><span style="color:#B392F0;">    MyGitPlugin</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;$git&#39;</span><span style="color:#E1E4E8;">), </span><span style="color:#6A737D;">// 名称任意</span></span>
<span class="line"><span style="color:#F97583;">    ...</span></span>
<span class="line"><span style="color:#E1E4E8;">  ]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ol start="2"><li>构建后访问 console.log</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;$git&#39;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 可以查看构建COMMIT_ID、CURRENT_BRANCH、COMMIT_DETAIL、BUILD_TIME</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,10),i=[p];function t(o,r,c,d,u,b){return n(),a("div",null,i)}const g=s(l,[["render",t]]);export{m as __pageData,g as default};
