import{_ as s,X as n,M as a,aw as l}from"./chunks/framework.BFDeQwB9.js";const b=JSON.parse('{"title":"@iconify/vue","description":"","frontmatter":{},"headers":[],"relativePath":"vites/@iconify/vue转.md","filePath":"vites/@iconify/vue转.md"}'),p={name:"vites/@iconify/vue转.md"},o=l(`<h1 id="iconify-vue" tabindex="-1">@iconify/vue <a class="header-anchor" href="#iconify-vue" aria-label="Permalink to &quot;@iconify/vue&quot;">​</a></h1><p>官网：<a href="https://iconify.design/docs/icon-components/vue/" target="_blank" rel="noreferrer">https://iconify.design/docs/icon-components/vue/</a></p><p>iconify 是功能最丰富的图标框架。可以与任何图标库一起使用的统一图标框架。开箱即用的功能包括 80 多个图标集和超过 70,000 个图标。官方为了便于使用 iconify 网站上的图标，提供了@iconify/vue 组件，供大家使用 SVG framework，支持在线和离线 2 种方式使用。离线方式需要下载对应图标集合 json 数据，然后先从本地资源中加载，如果没有找到，通过 API 从线上下载资源，并进行浏览器缓存。</p><p>@iconify/vue 是一个功能非常强大的组件，支持图标名称动态渲染和静态渲染，正好弥补 vite-plugin-svg-icons 功能缺陷。</p><h2 id="依赖安装" tabindex="-1">依赖安装 <a class="header-anchor" href="#依赖安装" aria-label="Permalink to &quot;依赖安装&quot;">​</a></h2><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#9ECBFF;"> install</span><span style="color:#9ECBFF;"> @iconify/vue</span><span style="color:#79B8FF;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="使用例子" tabindex="-1">使用例子 <a class="header-anchor" href="#使用例子" aria-label="Permalink to &quot;使用例子&quot;">​</a></h2><div class="language-tsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Icon } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;@iconify/vue&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">Icon</span><span style="color:#B392F0;"> icon</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;mdi-light:home&quot;</span><span style="color:#E1E4E8;"> /&gt;;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="自定义组件" tabindex="-1">自定义组件 <a class="header-anchor" href="#自定义组件" aria-label="Permalink to &quot;自定义组件&quot;">​</a></h2><p>虽然@iconify/vue 也支持本地 svg,但逐个配置非常麻烦，所以结合 vite-plugin-svg-icons 和@iconify/vue,我们创建一个自定义组件，使其不仅支持本地静态动态 Svg 渲染，还支持显示静态动态 Svg 渲染。下面是自定义组件代码：</p><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">template</span><span style="color:#F97583;"> v-if</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">localIcon</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">svg</span><span style="color:#B392F0;"> aria-hidden</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;true&quot;</span><span style="color:#B392F0;"> width</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;1em&quot;</span><span style="color:#B392F0;"> height</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;1em&quot;</span><span style="color:#B392F0;"> v-bind</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">bindAttrs</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">use</span><span style="color:#E1E4E8;"> :</span><span style="color:#B392F0;">xlink</span><span style="color:#E1E4E8;">:</span><span style="color:#B392F0;">href</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">symbolId</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;"> fill</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;currentColor&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">svg</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">template</span><span style="color:#F97583;"> v-else</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">Icon</span><span style="color:#F97583;"> v-if</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">icon</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> :</span><span style="color:#B392F0;">icon</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">icon</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;"> v-bind</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">bindAttrs</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#B392F0;"> setup</span><span style="color:#B392F0;"> lang</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;ts&quot;</span><span style="color:#B392F0;"> name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;SvgIcon&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Icon } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;@iconify/vue&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">// eslint-disable-next-line vue/no-setup-props-destructure</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">icon</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">localIcon</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> defineProps</span><span style="color:#E1E4E8;">&lt;{</span></span>
<span class="line"><span style="color:#6A737D;">  /** iconify线上图标名称 */</span></span>
<span class="line"><span style="color:#FFAB70;">  icon</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">  /** 本地svg的文件名称 */</span></span>
<span class="line"><span style="color:#FFAB70;">  localIcon</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}&gt;();</span></span>
<span class="line"><span style="color:#6A737D;">// 获取组件传递的属性</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> attrs</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> useAttrs</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#6A737D;">// 计算绑定属性</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> bindAttrs</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> computed</span><span style="color:#E1E4E8;">&lt;{ </span><span style="color:#FFAB70;">class</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">; </span><span style="color:#FFAB70;">style</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;"> }&gt;(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> ({</span></span>
<span class="line"><span style="color:#E1E4E8;">  class: (attrs.class </span><span style="color:#F97583;">as</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">??</span><span style="color:#9ECBFF;"> &#39;w-24px h-24px&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  style: attrs.style </span><span style="color:#F97583;">as</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">}));</span></span>
<span class="line"><span style="color:#6A737D;">// 计算本地svg动态的symbolId</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> symbolId</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> computed</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> icon</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> localIcon </span><span style="color:#F97583;">??</span><span style="color:#9ECBFF;"> &#39;no-icon&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#9ECBFF;"> \`#icon-local-\${</span><span style="color:#E1E4E8;">icon</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>此时，便可以灵活的渲染本地和线上 iconify 网站上的 Svg 图标，使用例子如下：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">本地Svg:&lt;</span><span style="color:#FDAEB7;font-style:italic;">SvgIcon</span><span style="color:#B392F0;"> localIcon</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;logo&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#FDAEB7;font-style:italic;">SvgIcon</span><span style="color:#E1E4E8;">&gt; iconify线上Svg:&lt;</span><span style="color:#FDAEB7;font-style:italic;">SvgIcon</span></span>
<span class="line"><span style="color:#B392F0;">  icon</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;healthicons:fhir-logo&quot;</span></span>
<span class="line"><span style="color:#B392F0;">  class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;w-24px h-24px&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#FDAEB7;font-style:italic;">SvgIcon</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,13),e=[o];function t(c,r,E,i,y,F){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{b as __pageData,d as default};
