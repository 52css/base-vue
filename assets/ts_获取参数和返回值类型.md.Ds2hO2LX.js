import{_ as s,X as a,M as n,aw as e}from"./chunks/framework.BFDeQwB9.js";const u=JSON.parse('{"title":"获取参数和返回值类型","description":"","frontmatter":{},"headers":[],"relativePath":"ts/获取参数和返回值类型.md","filePath":"ts/获取参数和返回值类型.md"}'),l={name:"ts/获取参数和返回值类型.md"},o=e(`<h1 id="获取参数和返回值类型" tabindex="-1">获取参数和返回值类型 <a class="header-anchor" href="#获取参数和返回值类型" aria-label="Permalink to &quot;获取参数和返回值类型&quot;">​</a></h1><h2 id="code" tabindex="-1">Code <a class="header-anchor" href="#code" aria-label="Permalink to &quot;Code&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { login } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;./api&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="解析" tabindex="-1">解析 <a class="header-anchor" href="#解析" aria-label="Permalink to &quot;解析&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { login } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;./api&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 获取函数入参类型</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> options</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Parameters</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> login&gt;[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#6A737D;">// 获取函数返回类型</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> resp</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ReturnType</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> login&gt; </span><span style="color:#F97583;">|</span><span style="color:#79B8FF;"> null</span><span style="color:#F97583;"> =</span><span style="color:#79B8FF;"> null</span><span style="color:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,5),p=[o];function t(r,c,i,d,y,E){return n(),a("div",null,p)}const b=s(l,[["render",t]]);export{u as __pageData,b as default};
